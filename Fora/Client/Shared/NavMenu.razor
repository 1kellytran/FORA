@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IUserManager UserManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Fora</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        
        @*<div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>*@
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    //private bool SignedIn;
    //public UserStatusDTOModel UserStatus { get; set; }
    //protected override async Task OnInitializedAsync()
    //{
    //    var token = await localStorage.GetItemAsync<string>("Token");
    //    token = token.Replace("\"", "");

    //    UserStatus = await UserManager.CheckUserLogin(token);

    //    if (UserStatus.IsLoggedIn == true)
    //    {
    //        SignedIn = true;
    //    }
    //    else
    //    {
    //        SignedIn = false;
    //    }
    //}
}
