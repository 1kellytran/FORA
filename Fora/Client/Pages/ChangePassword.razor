@inject IUserManager UserManager
@inject IDataManager Datamanager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>Change Password</h3>

<buton class="btn btn-primary" @onclick="DisplayPasswordInfo">@passwordButtonName</buton>
<br />
<br />
@if (showPasswordInfo)
{

<EditForm Model="UpdatedUser" OnValidSubmit="UpdatePassword">
<DataAnnotationsValidator/>
    <div>
        <label>Old password:</label>
        <InputText @bind-Value="UpdatedUser.OldPassword" placeholder="Old Password" class="form-control"></InputText>
    </div>
    <br />
    <div>
        <label>New password:</label>
        <InputText @bind-Value="UpdatedUser.NewPassword" placeholder="New Password" class="form-control"></InputText>
    </div>
    <br />
    <div>
        <label>Confirm new password:</label>
        <InputText @bind-Value="UpdatedUser.NewPasswordConfirmed" placeholder="Confirm Password" class="form-control"></InputText>
    </div>
    <br />
    <div>
        <button class="btn btn-primary" type="submit" >Change password!</button>
    </div>
<ValidationSummary/>
</EditForm>
}
@message


@code {
    private bool SignedIn;
    private bool showPasswordInfo = false;
    public PasswordDTOModel UpdatedUser { get; set; } = new();
    private string passwordButtonName = "Change Password";
    private string message = "";
    public UserStatusDTOModel UserStatus { get; set; } = new();
    public UserModel ActiveUser { get; set; } = new();
    public List<InterestModel> AllInterests { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
         //*****CHECK USER LOGIN (att användas på alla sidor)
        //Hämtar token från localstorage
        var token = await localStorage.GetItemAsync<string>("Token");
        token = token.Replace("\"", "");
        //kollar att user finns i databas med token
        var result = await UserManager.CheckUserLogin(token);
        UserStatus = result;



        //hämtar den aktiva användaren
        ActiveUser = await UserManager.GetUserByToken(token);
        //hämtar alla intressen
        AllInterests = await Datamanager.GetAllInterests();

    }

    //ChangePassword button
    private void DisplayPasswordInfo()
    {
        if(!showPasswordInfo)
        {
            showPasswordInfo = true;
            passwordButtonName = "Hide";

        }
        else if(showPasswordInfo)
        {
            showPasswordInfo = false;
            passwordButtonName = "Change Password";
        }

    }

    private void UpdatePassword()
    {
        UpdatedUser.Username = ActiveUser.Username; 
        UserManager.UpdatePassword(UpdatedUser);
    }


}
