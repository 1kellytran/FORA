@page "/mypage"
@inject IUserManager UserManager
@inject IDataManager Datamanager
@inject Blazored.LocalStorage.ILocalStorageService localStorage





<h1>Welcome to your page @ActiveUser.Username !</h1>
<br />
<br />
<h3>Your Current interest:</h3>
@foreach (var interest in UserInterests)
{
    <div class="card bg-primary p-2 text-dark bg-opacity-10">
        <div class="card-body">
            <strong>@interest.Name </strong><button class="btn btn-light" style="float: right">Remove from fav</button><button href="Threads/@interest.Id"class="btn btn-light" style="float: right">Go to interest</button>
        </div>
    </div>
    <br />

}
<hr />
<ChangePassword></ChangePassword>
<hr>






<form>





  
    <buton class="btn btn-primary" @onclick="ShowAllInterests">Show all interests</buton>
    <br />
    <br /> 





    @if (displayAllInterests)
    {
       
        <div>





          




            @foreach (var interest in AllInterests)
            {
                <div class="card bg-primary p-2 text-dark bg-opacity-10">
                    <div class="card-body">
                        <strong>@interest.Name </strong><button type="button" @onclick="(() =>AddToFav(interest.Id))" class="btn btn-light" style="float: right">Add to fav!</button><button class="btn btn-light" style="float: right">Go to threads!</button>
                    </div>
                </div>
                <br />
            }

            
            <buton class="btn btn-secondary" @onclick="HideAllInterests">Hide interests</buton>
            <br />
        </div>






    }



</form>






<br />
<hr />





<EditForm Model="InterestToAdd" OnValidSubmit="AddPersonalInterest">
    <DataAnnotationsValidator />
    <div>
        <label><strong>Create an interest you want to discuss:</strong></label>
        <InputText @bind-Value="InterestToAdd.Name" placeholder="Interest" class="form-control"></InputText>
    </div>
    <br />
    <div>
        <button class="btn btn-primary" type="submit">Create interest!</button>
    </div>





    <ValidationSummary />
</EditForm>
<br />
<br />
<hr />



@if (UserStatus.IsLoggedIn)
{
    <h3>You only see this because you are logged in</h3>
}




@if (UserStatus.IsAdmin)
{
    <h3>You only see this because you are an admin</h3>
}




@code {



    //Sets new userinterest
    public InterestModel InterestToAdd { get; set; } = new();
    public UserStatusDTOModel UserStatus { get; set; } = new();
    public UserModel ActiveUser { get; set; } = new();
    public List<InterestModel> AllInterests { get; set; } = new();
    public List<UserInterestModel> ActiveUserInterest { get; set; } = new();
    public List<InterestModel> UserInterests { get; set; } = new();
    public bool displayAllInterests = false;









    protected override async Task OnInitializedAsync()
    {
        //*****CHECK USER LOGIN (att användas på alla sidor)
        //Hämtar token från localstorage
        var token = await localStorage.GetItemAsync<string>("Token");
        token = token.Replace("\"", "");
        //kollar att user finns i databas med token
        var result = await UserManager.CheckUserLogin(token);
        UserStatus = result;



        //hämtar den aktiva användaren
        ActiveUser = await UserManager.GetUserByToken(token);
        //hämtar alla intressen
        AllInterests = await Datamanager.GetAllInterests();



        UserInterests = await Datamanager.GetUserInterests(ActiveUser.Id);
    }

    public async Task AddToFav(int interestid)
    {


        UserInterestModel modelToAdd = new();

        

       

        modelToAdd.Interest = AllInterests.FirstOrDefault(x => x.Id == interestid);

        modelToAdd.User = ActiveUser;

        Datamanager.CreateNewUserInterest(modelToAdd);

        
        
    }



    private async Task AddPersonalInterest()
    {
        InterestToAdd.Threads = new();
        //adding user id to interestmodel
        InterestToAdd.UserId = ActiveUser.Id;
        //creating intesrest in db
        await Datamanager.CreateInterest(InterestToAdd);
        AllInterests = await Datamanager.GetAllInterests();
        UserInterests = await Datamanager.GetUserInterests(ActiveUser.Id);



        ////adding created interest to usermodel, is this neccessary? :/
        //ActiveUser.Interests.Add(InterestToAdd);
        //await UserManager.UpdateUserModel(ActiveUser);
    }



    //Allinterest button
    private void ShowAllInterests()
    {
        displayAllInterests = true;
    }



    //Hide all interests
    private void HideAllInterests()
    {
        displayAllInterests = false;
    }






}